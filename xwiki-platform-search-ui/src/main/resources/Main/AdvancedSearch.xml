<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Main</web>
<name>AdvancedSearch</name>
<language></language>
<defaultLanguage></defaultLanguage>
<translation>0</translation>
<parent>Main.WebHome</parent>
<creator>xwiki:XWiki.Admin</creator>
<author>xwiki:XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>xwiki:XWiki.Admin</contentAuthor>
<creationDate>1343862655000</creationDate>
<date>1344849034000</date>
<contentUpdateDate>1344849034000</contentUpdateDate>
<version>1.1</version>
<title>Advanced Search</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>Main.AdvancedSearch</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>b632e69b-f6a2-42b8-8c32-064ebcebe003</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>/* Simple Accordion Script 
 * Requires Prototype and Script.aculo.us Libraries
 * By: Brian Crescimanno &lt;brian.crescimanno@gmail.com&gt;
 * http://briancrescimanno.com
 * This work is licensed under the Creative Commons Attribution-Share Alike 3.0
 * http://creativecommons.org/licenses/by-sa/3.0/us/
 */

if (typeof Effect == 'undefined')
  throw("You must have the script.aculo.us library to use this accordion");

var Accordion = Class.create({

    initialize: function(id, defaultExpandedCount) {
        if(!$(id)) throw("Attempted to initalize accordion with id: "+ id + " which was not found.");
        this.accordion = $(id);
        this.options = {
            toggleClass: "accordion-toggle",
            toggleActive: "accordion-toggle-active",
            contentClass: "accordion-content"
        }
        this.contents = this.accordion.select('div.'+this.options.contentClass);
        this.isAnimating = false;
        this.maxHeight = 0;
        this.current = defaultExpandedCount ? this.contents[defaultExpandedCount-1] : this.contents[0];
        this.toExpand = null;

        this.checkMaxHeight();
        this.initialHide();
        this.attachInitialMaxHeight();

        var clickHandler =  this.clickHandler.bindAsEventListener(this);
        this.accordion.observe('click', clickHandler);
    },

    expand: function(el) {
        this.toExpand = el.next('div.'+this.options.contentClass);
        if(this.current != this.toExpand){
            this.toExpand.show();
            console.log(this.toExpand);
            console.log(this.toExpand.firstDescendant());
            console.log(this.toExpand.firstDescendant().getHeight());
            this.maxHeight = this.toExpand.firstDescendant().getHeight() + 10;
            this.animate();
        }
    },

    checkMaxHeight: function() {
        this.maxHeight = this.contents[0].getHeight();
    },

    attachInitialMaxHeight: function() {
        this.current.previous('div.'+this.options.toggleClass).addClassName(this.options.toggleActive);
        if(this.current.getHeight() != this.maxHeight) this.current.setStyle({height: this.maxHeight+"px"});
    },

    clickHandler: function(e) {
        var el = e.element();
        if(el.hasClassName(this.options.toggleClass) &amp;&amp; !this.isAnimating) {
            this.expand(el);
        }
    },

    initialHide: function(){
        for(var i=0; i&lt;this.contents.length; i++){
            if(this.contents[i] != this.current) {
                this.contents[i].hide();
                this.contents[i].setStyle({height: 0});
            }
        }
    },

    animate: function() {
        var effects = new Array();
        var options = {
            sync: true,
            scaleFrom: 0,
            scaleContent: false,
            transition: Effect.Transitions.sinoidal,
            scaleMode: {
                originalHeight: this.maxHeight,
                originalWidth: this.accordion.getWidth()
            },
            scaleX: false,
            scaleY: true
        };

        effects.push(new Effect.Scale(this.toExpand, 100, options));

        options = {
            sync: true,
            scaleContent: false,
            transition: Effect.Transitions.sinoidal,
            scaleX: false,
            scaleY: true
        };

        effects.push(new Effect.Scale(this.current, 0, options));

        var myDuration = 0.75;

        new Effect.Parallel(effects, {
            duration: myDuration,
            fps: 35,
            queue: {
                position: 'end',
                scope: 'accordion'
            },
            beforeStart: function() {
                this.isAnimating = true;
                this.current.previous('div.'+this.options.toggleClass).removeClassName(this.options.toggleActive);
                this.toExpand.previous('div.'+this.options.toggleClass).addClassName(this.options.toggleActive);
            }.bind(this),
            afterFinish: function() {
                this.current.hide();
                this.toExpand.setStyle({ height: this.maxHeight+"px" });
                this.current = this.toExpand;
                this.isAnimating = false;
            }.bind(this)
        });
    }

});

document.observe("xwiki:dom:loaded", function(){
    accordion = new Accordion("side_nav", 0);
})</code>
</property>
<property>
<name>Advanced Search JavaScript</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<content>{{velocity}}
{{include document="SearchMacros"/}}
#set($docextras = [])
$xwiki.jsfx.use("js/prototype/prototype.js")
$xwiki.jsfx.use("js/scriptaculous/effects.js")
##*****************************************************##
## Arguments
##*****************************************************##
#set($text = "$!request.getParameter('q')")
#set($rows_f = "$!request.getParameter('rows')")
#set($start_f = "$!request.getParameter('firstIndex')")
#set($end_f = "$!request.getParameter('end')")
#set($space_f = "$!request.getParameter('space')")
#set($lang_f = "$!request.getParameter('lr')")
#set($filter = "$!request.getParameter('f')")
#set($debug = "$!request.getParameter('x')")
#set($boost = "$!request.getParameter('qf')")
#set($filetype = "$!request.getParameter('ft')")
#set($type = "$!request.getParameter('t')")
#set($boost = "$!request.getParameter('qf')")
#set($sort = "$!request.getParameter('si')")
#set($sorder = "$!request.getParameter('sorder')")


{{html wiki="true"}}

##*****************************************************##
## Search Results
##*****************************************************##
#if($text != "" )
	#set( $queryString="$text")
	#set( $searchService = $services.search )
	#set( $searchObj = $searchService.getSearch() )
	#set( $req= $searchObj.getSearchRequest())


	## Query text
	$req.setQueryString($text)

	##Search Parameters
		##Default the attributes
		#if($rows_f != "")
			#set($rows=$rows_f)
		#else
			#set($rows="10")
		#end
		#if($start_f != "")
			#set($start=$start_f)
		#else
			#set($start="0")
		#end
		#if($end_f != "")
			#set($end=$end_f)
		#else
			#set($end="0")
		#end

		#set($smap=$req.getSearchParametersMap())
		#set($a=$smap.put("start","${start}"))
		#set($a=$smap.put("rows","${rows}"))
		#set($a=$smap.put("qf","${boost}"))
                ####set($a=$smap.put("mm","2"))
                
                #if($sort != "")
                   #set($a=$smap.put("sort","${sort} desc"))
                #end 

	##Search Parameters End

	## Languages
	#set ($languages = [$xcontext.language])
	$req.setLanguages($languages)
		
	## Filter parameters
        #set($fmap=$req.getFilterParametersMap())

	## Filter parameters end

	##Filter based on entity. Space, Wiki.
	#if($space_f != "")		
		#set( $spacename = $space_f )
		#set( $webhome = "WebHome" )
		#set( $spaceDoc=$xwiki.getDocument("$spacename.$webhome"))
		#set( $entityReference=$spaceDoc.getDocumentReference().getLastSpaceReference())
		$req.setEntityReference($entityReference)
                #set($a=$fmap.put("+space",$spacename))
	#end


	## Search Results
	#set( $searchResponse = $searchObj.search($req))

	## Results
	#set($maxScore = $searchResponse.getMaxScore() )
	#set($totalNumber = $searchResponse.getTotalNumber() )
	#set($totalResults = $searchResponse.getTotalResults())
	#set($resultsCount = $totalResults.size())

	#set( $queryResponse = $searchResponse.getQueryResponse())
	#set( $spaceFacetFields = $queryResponse.getFacetField("space"))
	#set( $langFacetFields = $queryResponse.getFacetField("lang"))
	#set( $explainMap=$queryResponse.getExplainMap())
	#set( $debugMap=$queryResponse.getDebugMap())
#end


## ---------------
## Space macros
## ---------------
#macro(spaceoption $space $selectedSpace)
	&lt;option value="${space}" #if($selectedSpace == $space)selected="selected"#end&gt;$space&lt;/option&gt;
#end
#macro(spaceselect $selectedSpace $spaces)
&lt;select name="space" title="$msg.get('search.page.bar.spaces.title')"&gt;
	&lt;option value="" #if($selectedSpace == '')selected="selected"#end&gt;$msg.get('search.page.bar.spaces.all')&lt;/option&gt;
	#foreach($space in $spaces)
		#if (!$blacklistedSpaces.contains($space) &amp;&amp; $xwiki.hasAccessLevel('view', "${space}.DocumentReservedForInternalXWikiUsage${mathtool.random(0, 999)}"))
			#spaceoption($space $selectedSpace)
		#end
	#end
&lt;/select&gt;
#end
## ---------------
## Space filtering
## ---------------
#set($extraClause = '')
#set($spaces = $xwiki.spaces)
#set($selectedSpace = "$!request.space")
#if($selectedSpace != '' &amp;&amp; !$blacklistedSpaces.contains($selectedSpace))
  #set($extraClause = " AND space:${selectedSpace}")
#end

&lt;div class="search-bar"&gt;
	&lt;form id="search-form"&gt;
		&lt;div id="search_bar"
			&lt;div&gt;
				&lt;input type="text" title="Enter your search query" name="q" id="text" class="searchQuery" value="$text"&gt;
                                &lt;input type="hidden" id="sort-hidden-field" value="" name="si"/&gt;
				&lt;input type="submit" value="Search" title="Alt+S" class="button searchButton"&gt;
			&lt;/div&gt;
			&lt;div&gt;
				&lt;input id="filter" type="checkbox" #if($filter != "")checked="true"#end name="f" onchange="filterChange(this)"/&gt;
				&lt;label&gt;Filtered Search&lt;/label&gt;
				&lt;input id="debug" type="checkbox" #if($debug != "")checked="true"#end name="x" onchange="debugChange(this)"/&gt;
				&lt;label&gt;Debug Query&lt;/label&gt;
			&lt;/div&gt;
			&lt;div id="filteredSearch" #if($filter == "")class="noshow"#end&gt;
				&lt;table&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;label&gt;Spaces&lt;/label&gt;&lt;/td&gt;
						&lt;td&gt;#spaceselect($selectedSpace $spaces)&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;label&gt;Language&lt;/label&gt;&lt;/td&gt;
						&lt;td&gt;
							&lt;select name="lr"&gt;
								&lt;option value=""&gt;All languages&lt;/option&gt;
							&lt;/select&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;label&gt;Type&lt;/label&gt;&lt;/td&gt;
						&lt;td&gt;
							&lt;select name="t"&gt;
								&lt;option value=""&gt;All types&lt;/option&gt;
								&lt;option&gt;Attachments&lt;/option&gt;
								&lt;option&gt;Objects&lt;/option&gt;
								&lt;option&gt;Comments&lt;/option&gt;
							&lt;/select&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;label&gt;Filetype&lt;/label&gt;&lt;/td&gt;
						&lt;td&gt;
							&lt;select name="ft"&gt;
								&lt;option value=""&gt;All file types&lt;/option&gt;
								&lt;option&gt;Adobe Acrobat PDF (.pdf)&lt;/option&gt;
								&lt;option&gt;Microsoft Word (.doc/.docx)&lt;/option&gt;
								&lt;option&gt;Microsoft Powerpoint (.ppt/.pptx)&lt;/option&gt;
								&lt;option&gt;Microsoft Excel (.xls/.xlsx)&lt;/option&gt;
								&lt;option&gt;XWiki Archive (.xar)&lt;/option&gt;
							&lt;/select&gt;
						&lt;/td&gt;
					&lt;/tr&gt;
					&lt;tr&gt;
						&lt;td&gt;&lt;label&gt;Query boost&lt;/label&gt;&lt;/td&gt;
						&lt;td&gt;&lt;input type="text" value="$boost" name="qf" size="50"/&gt;&lt;span&gt;e.g. title^1.2 name^2.0 author^1.0 doccontent^0.5&lt;/span&gt;&lt;/td&gt;

					&lt;/tr&gt;
				&lt;/table&gt;
			&lt;/div&gt;
		&lt;/div&gt;
        &lt;/form&gt;
	
	&lt;div id="debugSearch" #if($debug == "")class="noshow"#end&gt;
		&lt;span&gt;Debug is On&lt;span&gt;
		#if($debugMap)
			&lt;div&gt;&lt;b&gt;Query Parser:&lt;/b&gt;$debugMap.get('QParser')&lt;/div&gt;
			&lt;div&gt;&lt;b&gt;Parsed Query:&lt;/b&gt;$debugMap.get('parsedquery')&lt;/div&gt;
			&lt;div&gt;&lt;b&gt;Processing time:&lt;/b&gt;$debugMap.get('timing')&lt;/div&gt; 
		#end
	&lt;/div&gt;
&lt;/div&gt;


&lt;div style="overflow: hidden"&gt;

          #if ( $text != "" )
		&lt;div id="sort"&gt;
			&lt;ul&gt;
				&lt;li&gt;Sort:&lt;/li&gt;
				&lt;li id="s_score" class="#if($sort == "score")active#end sort-item" title="score" onclick="handleSortElement(this);"&gt;Relevance&lt;/li&gt;
				&lt;li id="s_name" class="#if($sort == "name")active#end sort-item" title="name" onclick="handleSortElement(this);"&gt;Name&lt;/li&gt;
				&lt;li id="s_date" class="#if($sort == "date")active#end sort-item" title="date" onclick="handleSortElement(this);"&gt;Date&lt;/li&gt;
				&lt;li id="s_author" class="#if($sort == "author")active#end sort-item" title="author" onclick="handleSortElement(this);"&gt;Last Author&lt;/li&gt;
			&lt;/ul&gt;
		&lt;/div&gt;
	
                

		##***************************************************##
		## Pagination                                        ##
		##***************************************************##
		#set($paginationParameters = {
			'url' : $doc.getURL('view', "q=${escapetool.url($text)}"),
			'totalItems' : $totalNumber,
			'defaultItemsPerPage' : 10,
			'position': 'top'
		})
		#pagination($paginationParameters)

		#if($resultsCount &gt; 0 )
		&lt;div id="main_container"&gt;
			&lt;div id="side_nav" class="accordion"&gt;   
				#foreach($facetfield in $queryResponse.getFacetFields())
					#set($fall=$facetfield.getValues())
					#set($frem=$facetfield.getLimitingFields(1).getValues())
					#set($freq=$fall.removeAll($frem))
					#if($fall.size()&gt;1)
						&lt;div class="accordion-toggle"&gt;${facetfield.getName()}&lt;/div&gt; 
						&lt;div class="accordion-content"&gt;
							&lt;ul&gt;
								&lt;li&gt;&lt;a href="$doc.getURL('view', "q=${escapetool.url($text)}")" &gt;All&lt;/a&gt;&lt;/li&gt;
								#foreach($facet_count in $facetfield.getValues())
									#if ($facet_count.getCount() &gt; 0 &amp;&amp; $facet_count.getName() != "date" &amp;&amp; $facet_count.getName() != "creationdate")
										&lt;li&gt;&lt;a href="$doc.getURL('view', "q=${escapetool.url($text)}&amp;${facetfield.getName()}=${escapetool.url($facet_count.getName())}")" &gt;$facet_count&lt;/a&gt;&lt;/li&gt;
									#end
								#end
							&lt;/ul&gt;
						&lt;/div&gt;
					#end
				 #end
			&lt;/div&gt;
			&lt;div id="search-results"&gt;
			#foreach( $searchResult in $totalResults )
			    ##***************************************************##
			    ## Document                                          ##
			    ##***************************************************##
			    #set($itemfullname = $services.model.serialize($searchResult.getReference()))
			    #set($itemDoc = $xwiki.getDocument($itemfullname))
                            #set($itemType=$searchResult.getType())

			    #if($itemType=="ATTACHMENT")
			    	#set($title=$searchResult.getFileName())
			    	#set($title_url="$searchResult.getURL()")
                                #set($itemtypeclass="search-attachment")
                            #elseif($itemType=="OBJECT")
                                #set($itemtypeclass="search-object")
			    	#set($title=$escapetool.xml($xwiki.getDocument($itemfullname).plainTitle))
			    	#set($title_url=$xwiki.getURL($itemfullname))
                            #elseif($itemType=="PROPERTY")
                                #set($itemtypeclass="search-property")
			    	#set($title=$escapetool.xml($xwiki.getDocument($itemfullname).plainTitle))
			    	#set($title_url=$xwiki.getURL($itemfullname))
			    #else
			    	#set($title=$escapetool.xml($xwiki.getDocument($itemfullname).plainTitle))
			    	#set($title_url=$xwiki.getURL($itemfullname))
                                #set($itemtypeclass="search-doc")
			    #end 
			    &lt;div&gt;
			        &lt;div class="search-item"&gt;
				        &lt;div class="search-item-description ${itemtypeclass}"&gt;
					        ##Title
					        &lt;h2 class="search-item-title"&gt;
					           &lt;a href="$title_url"&gt;$title&lt;/a&gt;
					        &lt;/h2&gt;
					        #if($searchResult.getTitle()) &lt;div&gt;${searchResult.getTitle()}&lt;/div&gt;#end
				            ##*********************************************************##
				            ## Location                                                ##
				            ##*********************************************************##
				            &lt;div class="search-item-location"&gt;
				              $msg.get('search.item.location', [
				              $escapetool.xml($itemDoc.wiki), $xwiki.getURL("$searchResult.getWikiName():Main.WebHome"),
				              $escapetool.xml($itemDoc.space), $xwiki.getURL("$searchResult.getWikiName():$searchResult.getSpaceName().WebHome"),
				              $escapetool.xml($itemDoc.name), $xwiki.getURL($itemfullname)])
				            &lt;/div&gt;
				        &lt;/div&gt;
				        &lt;div class="search-item-relevance"&gt;
			                ##if ($isScored)
			                #set ($resval = $mathtool.min($mathtool.mul($searchResult.getScore(), 100), 100))
			                ##*********************************************************##
			                ## Relevance                                               ##
			                ##*********************************************************##
			                  &lt;span class="item-relevance" title="$msg.get('search.item.relevance.title')"&gt;
			                    &lt;span class="current-relevance" style="width:${resval}%;"&gt;&lt;/span&gt;
			                  &lt;/span&gt;
			                  &lt;span class="relevance-text"&gt;$resval.intValue()%&lt;/span&gt;
                                          &lt;a title="${searchResult.getId()}" class="debug" href="javascript:" onclick="handleDebugClick(this)"&gt;Debug&lt;/a&gt;
			                ##end ## isScored
				        &lt;/div&gt;
			        &lt;/div&gt;
                                #if($searchResult.getHighlightText())
			        &lt;div&gt;
			        	&lt;p&gt;$searchResult.getHighlightText()&lt;/p&gt;
			        &lt;/div&gt;
                                #end
                                &lt;div id="debug_${searchResult.getId()}" class="noshow"&gt;
                                     &lt;pre&gt;
                                          $explainMap.get($searchResult.getId())
                                     &lt;/pre&gt;
                                &lt;/div&gt;
			    &lt;/div&gt;
			#end
		&lt;/div&gt;
		#end
	#end

	&lt;p style="clear: both"&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p style="clear: both"&gt;&lt;/p&gt;

{{/html}}

{{/velocity}}</content></xwikidoc>
